Index: Students_data.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1:1++:1:1\r\n2:2:2:2\r\n3:6:3:3\r\n4:4:4:4\r\n5:6:5:5\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Students_data.txt b/Students_data.txt
--- a/Students_data.txt	(revision d6a5c4e8bbf73f77ea996b10c0ebd84d420829ec)
+++ b/Students_data.txt	(date 1670867972079)
@@ -1,5 +1,2 @@
-1:1++:1:1
+1:1:1:1
 2:2:2:2
-3:6:3:3
-4:4:4:4
-5:6:5:5
Index: forgotPasswordLayout.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import PySimpleGUI as sg\r\nimport main\r\n\r\ndef get_forgot_password(Name, ID, Secret):\r\n    \"\"\"function that returns current password\"\"\"\r\n    if ID in main.db.student_dict:\r\n        if main.db.student_dict[ID].name == Name and main.db.student_dict[ID].secret_word == Secret:\r\n            return main.db.student_dict[ID].password\r\n        else:\r\n            return \"ID exists but username or secret word do not\"\r\n    else:\r\n        return \"ID doesn't exists\"\r\n\r\n\r\ndef open_forgot_password_window():\r\n    forgot_password_layout = [[sg.Text(\"Forgot Password\",justification='center')],\r\n                              [sg.Text(\"ID :\", size=(10, 1)), sg.InputText('', size=(20, 1), key='input_ID')],\r\n                              [sg.Text(\"Name :\", size=(10, 1)), sg.InputText('', size=(20, 1), key='input_name')],\r\n                              [sg.Text(\"Secret Word :\", size=(10, 1)), sg.InputText('', size=(20, 1), key='input_secret_word')],\r\n                              [sg.Text(size=(30, 1), key=\"Output\")],\r\n                              [sg.Submit(button_text=\"Confirm\"),\r\n                               sg.Exit(pad=((150, 0), (0, 0)))],]\r\n\r\n    forgot_password_window = sg.Window(\"Forgot Password\", forgot_password_layout, resizable=True, finalize=True, element_justification='c')\r\n    while True:\r\n        forgot_password_event, forgot_password_values = forgot_password_window.read()\r\n        if forgot_password_event == \"Confirm\":\r\n            input_name = forgot_password_values['input_name']\r\n            input_ID = forgot_password_values['input_ID']\r\n            input_secret_word = forgot_password_values['input_secret_word']\r\n\r\n            if input_name == '' or input_ID == '' or input_secret_word == '':\r\n                forgot_password_window[\"Output\"].update(\"One or more of the fields not entered\")\r\n            else:\r\n                if get_forgot_password(input_name, input_ID, input_secret_word) not in (\r\n                        \"ID exists but username or secret word do not\", \"ID doesn't exists\"):\r\n                    forgot_password_window[\"Output\"].update(\r\n                        get_forgot_password(input_name, input_ID, input_secret_word))\r\n\r\n        if forgot_password_event == sg.WIN_CLOSED or forgot_password_event == \"Exit\":\r\n            forgot_password_window.close()\r\n            break\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/forgotPasswordLayout.py b/forgotPasswordLayout.py
--- a/forgotPasswordLayout.py	(revision d6a5c4e8bbf73f77ea996b10c0ebd84d420829ec)
+++ b/forgotPasswordLayout.py	(date 1670867786256)
@@ -1,6 +1,7 @@
 import PySimpleGUI as sg
 import main
 
+
 def get_forgot_password(Name, ID, Secret):
     """function that returns current password"""
     if ID in main.db.student_dict:
Index: studentMenuLayout.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import PySimpleGUI as sg\r\nfrom database_Personas import Student\r\nimport main\r\n\r\n\r\ndef open_student_window():\r\n    student_menu_layout = [[sg.Text(\"Student Menu\")],\r\n                           [sg.Text(\"Secret Word :\", size=(10, 1)),\r\n                           sg.InputText('', size=(20, 1), key='input_secret_word')],\r\n                           [sg.Text(size=(30, 1), key=\"Error\")],\r\n                           [sg.Submit(button_text=\"Confirm\"),\r\n                           sg.Exit(pad=((150, 0), (0, 0)))]]\r\n\r\n    student_menu_window = sg.Window(\"Student Menu\", student_menu_layout, element_justification='c')\r\n    while True:\r\n        forgot_password_event, forgot_password_values = student_menu_window.read()\r\n        if forgot_password_event == \"Confirm\":\r\n            input_username = forgot_password_values['input_username']\r\n            input_ID = forgot_password_values['input_ID']\r\n            input_secret_word = forgot_password_values['input_secret_word']\r\n\r\n            if input_username == '' or input_ID == '' or input_secret_word == '':\r\n                student_menu_window[\"Error\"].update(\"One or more of the fields not entered\")\r\n\r\n        if forgot_password_event == sg.WIN_CLOSED or forgot_password_event == \"Exit\":\r\n            student_menu_window.close()\r\n            break\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/studentMenuLayout.py b/studentMenuLayout.py
--- a/studentMenuLayout.py	(revision d6a5c4e8bbf73f77ea996b10c0ebd84d420829ec)
+++ b/studentMenuLayout.py	(date 1670869087075)
@@ -6,7 +6,7 @@
 def open_student_window():
     student_menu_layout = [[sg.Text("Student Menu")],
                            [sg.Text("Secret Word :", size=(10, 1)),
-                           sg.InputText('', size=(20, 1), key='input_secret_word')],
+                           sg.InputText('', size=(20, 1), key='input_secret_word',)],
                            [sg.Text(size=(30, 1), key="Error")],
                            [sg.Submit(button_text="Confirm"),
                            sg.Exit(pad=((150, 0), (0, 0)))]]
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import PySimpleGUI as sg\r\nfrom database_Personas import Student\r\nfrom database_Personas import Worker\r\nfrom database_Personas import DataBase\r\nimport forgotPasswordLayout\r\nimport changePasswordLayout\r\nimport workerMenuLayout\r\nimport studentMenuLayout\r\nimport managerMenuLayout\r\nimport registerLayout\r\n\r\ndb = DataBase('Students_data.txt', 'Workers_data.txt')\r\n\r\ndef mainMenu():\r\n    global db\r\n    # Main event loop\r\n    login_layout = [[sg.Text(\"Welcome to the design department\\n inventory management system !\")],\r\n                    [sg.Text(\"ID :\", size=(10, 1)), sg.InputText('', size=(20, 1), key='input_ID'),\r\n                     sg.Submit(button_text=\"Change password\")],\r\n                    [sg.Text(\"Password :\", size=(10, 1)),\r\n                     sg.InputText('', size=(20, 1), key='input_password', password_char='‚óè'),\r\n                     sg.Submit(button_text=\" Forgot password \")],\r\n                    [sg.Text(size=(30, 1), key=\"Error\")],\r\n                    [sg.Submit(button_text=\"Log in\"),\r\n                     sg.Submit(button_text=\"Register\"),\r\n                     sg.Exit(pad=((210, 0), (0, 0)))]]\r\n\r\n    login_window = sg.Window(\"Inventory Management System \", login_layout, element_justification='c')\r\n    while True:\r\n        login_event, login_values = login_window.read()\r\n\r\n        if login_event == \"Log in\":\r\n            input_ID = login_values['input_ID']\r\n            input_password = login_values['input_password']\r\n\r\n            if input_ID == '' and input_password == '':\r\n                login_window[\"Error\"].update(\"ID and password not entered\")\r\n\r\n            elif input_password == '':\r\n                login_window[\"Error\"].update(\"Password not entered\")\r\n\r\n            elif input_ID == '':\r\n                login_window[\"Error\"].update(\"ID not entered\")\r\n\r\n            else:\r\n                # checks first if the user is a student\r\n                if check_login_student(input_ID, input_password):\r\n                    studentMenuLayout.open_student_window()\r\n\r\n                # else checks if the user is a worker\r\n                elif check_login_worker(input_ID, input_password) and input_ID != 'admin':\r\n                    workerMenuLayout.open_worker_window()\r\n\r\n                elif check_login_worker(input_ID, input_password):\r\n                    managerMenuLayout.open_manager_window()\r\n\r\n                else:\r\n                    login_window[\"Error\"].update(\"ID or password incorrect\")\r\n\r\n        if login_event == \"Register\":\r\n            registerLayout.open_register_window()\r\n            db = DataBase('Students_data.txt', 'Workers_data.txt')\r\n            # changes to students dict made in registerLayout not seen in main's student dict\r\n            # find way to do this without opening database in each file\r\n\r\n        if login_event == \"Change password\":\r\n            changePasswordLayout.open_change_password_window()\r\n            db = DataBase('Students_data.txt', 'Workers_data.txt')\r\n\r\n        if login_event == \" Forgot password \":  # There are spaces before and after the string\r\n            forgotPasswordLayout.open_forgot_password_window()\r\n\r\n        if login_event == \"Exit\" or login_event == sg.WIN_CLOSED:\r\n            break\r\n\r\n    login_window.close()\r\n\r\n\r\n'''def append_to_data_base(input_obj):\r\n    global db\r\n    if isinstance(input_obj, Student):\r\n        db.student_dict[input_obj.ID] = input_obj\r\n    elif isinstance(input_obj, Worker):\r\n        db.worker_dict[input_obj.ID] = input_obj'''\r\n\r\n\r\ndef check_login_student(ID, Password):\r\n    \"\"\"a function that checks if student`s ID and password are matching\"\"\"\r\n    return ID in db.student_dict and db.student_dict[ID].password == Password\r\n\r\n\r\ndef check_login_worker(ID, Password):\r\n    \"\"\"a function that checks if worker`s ID and password are matching\"\"\"\r\n    return ID in db.worker_dict and db.worker_dict[ID].password == Password\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    mainMenu()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision d6a5c4e8bbf73f77ea996b10c0ebd84d420829ec)
+++ b/main.py	(date 1670867786234)
@@ -11,6 +11,7 @@
 
 db = DataBase('Students_data.txt', 'Workers_data.txt')
 
+
 def mainMenu():
     global db
     # Main event loop
@@ -60,8 +61,6 @@
         if login_event == "Register":
             registerLayout.open_register_window()
             db = DataBase('Students_data.txt', 'Workers_data.txt')
-            # changes to students dict made in registerLayout not seen in main's student dict
-            # find way to do this without opening database in each file
 
         if login_event == "Change password":
             changePasswordLayout.open_change_password_window()
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2513eb0e-759c-4d70-b843-d072404ad6ca\" name=\"Changes\" comment=\"manager login\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Students_data.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Students_data.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/changePasswordLayout.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/changePasswordLayout.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/database_Personas.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/database_Personas.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/forgotPasswordLayout.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/forgotPasswordLayout.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/managerMenuLayout.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/managerMenuLayout.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/registerLayout.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/registerLayout.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/workerMenuLayout.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/workerMenuLayout.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"79678d1d-ab31-43c3-9f33-53f06f1a5a88\" />\r\n        <option name=\"url\" value=\"https://github.com/daniebo4/DRW.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2IofHSMLiZmpMeB1i9V9GEtpRga\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Daniel/Desktop/GitProjects/DRW/DRW&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"DRW\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2513eb0e-759c-4d70-b843-d072404ad6ca\" name=\"Changes\" comment=\"\" />\r\n      <created>1670852771061</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1670852771061</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E-00001\" summary=\"manager login\">\r\n      <created>1670857234783</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\u200E\" />\r\n      <updated>1670857234783</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"manager login\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"manager login\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"PythonConfigurationType\">\r\n        <watch expression=\"db\" language=\"Python\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d6a5c4e8bbf73f77ea996b10c0ebd84d420829ec)
+++ b/.idea/workspace.xml	(date 1670869201892)
@@ -7,13 +7,9 @@
     <list default="true" id="2513eb0e-759c-4d70-b843-d072404ad6ca" name="Changes" comment="manager login">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Students_data.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Students_data.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/changePasswordLayout.py" beforeDir="false" afterPath="$PROJECT_DIR$/changePasswordLayout.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/database_Personas.py" beforeDir="false" afterPath="$PROJECT_DIR$/database_Personas.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/forgotPasswordLayout.py" beforeDir="false" afterPath="$PROJECT_DIR$/forgotPasswordLayout.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/managerMenuLayout.py" beforeDir="false" afterPath="$PROJECT_DIR$/managerMenuLayout.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/registerLayout.py" beforeDir="false" afterPath="$PROJECT_DIR$/registerLayout.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/workerMenuLayout.py" beforeDir="false" afterPath="$PROJECT_DIR$/workerMenuLayout.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/studentMenuLayout.py" beforeDir="false" afterPath="$PROJECT_DIR$/studentMenuLayout.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -35,6 +31,12 @@
         <option name="url" value="https://github.com/daniebo4/DRW.git" />
       </UrlAndAccount>
     </option>
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$USER_HOME$/AppData/Local/Programs/Python/Python39/Lib/_bootlocale.py" root0="SKIP_INSPECTION" />
+    <setting file="file://$USER_HOME$/AppData/Local/Programs/Python/Python39/Lib/codecs.py" root0="SKIP_INSPECTION" />
+    <setting file="file://$USER_HOME$/AppData/Local/Programs/Python/Python39/Lib/encodings/cp1255.py" root0="SKIP_INSPECTION" />
+    <setting file="file://$PROJECT_DIR$/venv/Lib/site-packages/PySimpleGUI/PySimpleGUI.py" root0="SKIP_INSPECTION" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -97,7 +99,14 @@
       <option name="project" value="LOCAL‚Äé" />
       <updated>1670857234783</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL‚Äé-00002" summary="manager login">
+      <created>1670861126763</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL‚Äé-00002" />
+      <option name="project" value="LOCAL‚Äé" />
+      <updated>1670861126763</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
